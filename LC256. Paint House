class Solution {
    public int minCost(int[][] costs) {
        if(costs == null || costs.length == 0 || costs[0].length == 0) return 0;
        int n = costs.length;
        int[][] dp = new int[n+1][3];
        
        int[] val = new int[3];
        
        for(int i=1; i<=n; i++){
            int rowIndex = i - 1;
            for(int j=0; j<3; j++){
                val[j] = costs[rowIndex][j] + dp[i-1][j];
            }
            dp[i][0] = Math.min(val[1], val[2]);
            dp[i][1] = Math.min(val[0], val[2]);
            dp[i][2] = Math.min(val[0], val[1]);
        }
        
        return Math.min(dp[n][0], Math.min(dp[n][1], dp[n][2]));
    }
}

// time:O(n);
// space: O(1);
